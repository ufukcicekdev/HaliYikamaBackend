# Generated by Django 4.2.9 on 2025-10-19 20:58

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("services", "0001_initial"),
        ("accounts", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Booking",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "booking_number",
                    models.CharField(editable=False, max_length=20, unique=True),
                ),
                ("pickup_date", models.DateField()),
                ("delivery_date", models.DateField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Approval"),
                            ("confirmed", "Confirmed"),
                            ("scheduled", "Scheduled"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "delivery_fee",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "discount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "total",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                ("currency", models.CharField(default="TRY", max_length=3)),
                ("customer_notes", models.TextField(blank=True)),
                ("admin_notes", models.TextField(blank=True)),
                ("cancellation_reason", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("confirmed_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("cancelled_at", models.DateTimeField(blank=True, null=True)),
                (
                    "assigned_technician",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"user_type": "technician"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_bookings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "delivery_address",
                    models.ForeignKey(
                        blank=True,
                        help_text="If different from pickup",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="delivery_bookings",
                        to="accounts.address",
                    ),
                ),
            ],
            options={
                "verbose_name": "booking",
                "verbose_name_plural": "bookings",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TimeSlot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                ("max_capacity", models.IntegerField(default=5)),
                ("current_bookings", models.IntegerField(default=0)),
                ("is_available", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "time slot",
                "verbose_name_plural": "time slots",
                "ordering": ["date", "start_time"],
                "indexes": [
                    models.Index(
                        fields=["date", "is_available"],
                        name="bookings_ti_date_7953a9_idx",
                    )
                ],
                "unique_together": {("date", "start_time")},
            },
        ),
        migrations.CreateModel(
            name="BookingStatusHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("old_status", models.CharField(max_length=20)),
                ("new_status", models.CharField(max_length=20)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "booking",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="status_history",
                        to="bookings.booking",
                    ),
                ),
                (
                    "changed_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "booking status history",
                "verbose_name_plural": "booking status histories",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="BookingItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Quantity or square meters",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                ("unit_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("line_total", models.DecimalField(decimal_places=2, max_digits=10)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "booking",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="bookings.booking",
                    ),
                ),
                (
                    "subtype",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="services.subtype",
                    ),
                ),
            ],
            options={
                "verbose_name": "booking item",
                "verbose_name_plural": "booking items",
                "ordering": ["id"],
            },
        ),
        migrations.AddField(
            model_name="booking",
            name="delivery_time_slot",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="delivery_bookings",
                to="bookings.timeslot",
            ),
        ),
        migrations.AddField(
            model_name="booking",
            name="pickup_address",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="pickup_bookings",
                to="accounts.address",
            ),
        ),
        migrations.AddField(
            model_name="booking",
            name="pickup_time_slot",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="pickup_bookings",
                to="bookings.timeslot",
            ),
        ),
        migrations.AddField(
            model_name="booking",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="bookings",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddIndex(
            model_name="booking",
            index=models.Index(
                fields=["status", "pickup_date"], name="bookings_bo_status_f51fce_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="booking",
            index=models.Index(
                fields=["user", "status"], name="bookings_bo_user_id_69a5d5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="booking",
            index=models.Index(
                fields=["booking_number"], name="bookings_bo_booking_03d631_idx"
            ),
        ),
    ]
